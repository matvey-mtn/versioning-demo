/* parent project */
rootProject.name = 'versioning-demo'

include 'service-foo', 'service-bar'

def includeInfra = true

def substitutions = [
        "io.logz.example.infrastructure:string-utils": ":string-utils"
]

if (isNotJenkinsBuild() && includeInfra) {
    includeBuild('./infrastructure') {
        dependencySubstitution {
            substitute module("io.logz.example:no-ops") using project(":no-ops") because('stub to disable default substitution')
            substitutions.entrySet().forEach {
                def moduleName = it.key
                def targetProject = it.value
                substitute module("$moduleName") using project("$targetProject")
            }
        }
    }
}

private static boolean isNotJenkinsBuild() {
    def jenkinsHome = System.getenv('JENKINS_HOME')
    return jenkinsHome == null || jenkinsHome.isEmpty()
}


